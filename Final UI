local urls = {
    "https://raw.githubusercontent.com/Shipwuu/Yunicx-UI/main/Button%201",
    "https://raw.githubusercontent.com/Shipwuu/Yunicx-UI/main/Button%204",
    "https://raw.githubusercontent.com/Shipwuu/Yunicx-UI/main/Button%203",
    "https://raw.githubusercontent.com/Shipwuu/Yunicx-UI/main/Button%202",
    "https://raw.githubusercontent.com/Shipwuu/Yunicx-UI/main/Button%205",
    "https://raw.githubusercontent.com/Shipwuu/Yunicx-UI/main/Chat%20SPY",
    "https://raw.githubusercontent.com/Shipwuu/Yunicx-UI/main/Animation"
}

local maxRetries = 3  -- Maximum number of retries for each URL
local scripts = {}

-- Function to load a script from a URL, with retries
local function loadScript(url)
    local numRetries = 0
    local success = false
    local result = nil

    repeat
        numRetries = numRetries + 1
        success, result = pcall(function()
            return game:HttpGet(url)
        end)

        if not success then
            warn("Failed to fetch script from URL: " .. url .. ", retrying...")
            wait(1)  -- Wait before retrying
        end
    until success or numRetries >= maxRetries

    if success then
        return result  -- Return the fetched script content
    else
        warn("Failed to fetch script from URL after " .. maxRetries .. " retries: " .. url)
        return nil  -- Return nil if fetching failed
    end
end

-- Fetch and store each script
for _, url in ipairs(urls) do
    local scriptContent = loadScript(url)
    if scriptContent then
        print("URL: " .. url .. " ✅")
        table.insert(scripts, { url = url, content = scriptContent, success = true })
    else
        print("URL: " .. url .. " ❌")
        table.insert(scripts, { url = url, content = "Failed to fetch script.", success = false })
    end
end

-- Concatenate all fetched scripts
local concatenatedScript = ""
for _, scriptInfo in ipairs(scripts) do
    if scriptInfo.success then
        concatenatedScript = concatenatedScript .. scriptInfo.content .. "\n"
    end
end

-- Execute the concatenated script if there are scripts to execute
if concatenatedScript ~= "" then
    local success, errorMessage = pcall(function()
        loadstring(concatenatedScript)()
    end)

    if not success then
        warn("Failed to execute concatenated script: " .. errorMessage)
    end
else
    warn("No valid scripts to execute.")
end
